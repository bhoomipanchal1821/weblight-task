{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT/weblight-task/src/components/DropDownChart.js\",\n  _s = $RefreshSig$();\n// DynamicHighchart.js\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport fetchChartData from \"../redux/chartdataSlice\";\nimport { setChartData } from \"../redux/chartdataSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicHighchart = () => {\n  _s();\n  // Sample chart data structure\n  const chartData = [{\n    category: \"Week<br/>Changes<br/>Contributer\",\n    value1: 10,\n    value2: 20\n  }, {\n    category: \"Week<br/>Changes<br/>Contributer\",\n    value1: 20,\n    value2: 30\n  }, {\n    category: \"Week<br/>Changes<br/>Contributer\",\n    value1: 50,\n    value2: 75\n  }, {\n    category: \"Week<br/>Changes<br/>Contributer\",\n    value1: 50,\n    value2: 75\n  }, {\n    category: 'Week<br/>Changes<br/>Contributer',\n    value1: 50,\n    value2: 75\n  }, {\n    category: 'Week<br/>Changes<br/>Contributer',\n    value1: 50,\n    value2: 75\n  }, {\n    category: 'Week<br/>Changes<br/>Contributer',\n    value1: 50,\n    value2: 75\n  }\n  // ... more data\n  ];\n  const dispatch = useDispatch();\n  const selectedOption = useSelector(state => state.dropdown.selectedOption);\n  useEffect(() => {\n    if (selectedOption) {\n      fetchChartData(selectedOption.value).then(data => {\n        dispatch(setChartData(data)); // Dispatch the actual action to update chart data\n      }).catch(error => {\n        console.error(\"Error fetching chart data:\", error);\n      });\n    }\n  }, [dispatch, selectedOption]);\n  const chartOptions = {\n    chart: {\n      type: \"line\" // Specify the chart type (line, column, bar, etc.)\n    },\n    title: {\n      text: \"Total Changes\"\n    },\n    xAxis: {\n      categories: chartData.map(item => item.category),\n      // Replace with your actual data property\n      title: {\n        text: \"X-Axis Label\"\n      }\n    },\n    yAxis: {\n      title: {\n        text: \"Y-Axis Label\"\n      }\n    },\n    series: [{\n      name: \"Series 1\",\n      data: chartData.map(item => item.value1) // Replace with your actual data property\n    }]\n    // Add more configuration options as needed\n  };\n  return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n    highcharts: Highcharts,\n    options: chartOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n_s(DynamicHighchart, \"A6DpT8ttTkT7mUVlAHg1LYyMpZg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DynamicHighchart;\nexport default DynamicHighchart;\nvar _c;\n$RefreshReg$(_c, \"DynamicHighchart\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Highcharts","HighchartsReact","fetchChartData","setChartData","jsxDEV","_jsxDEV","DynamicHighchart","_s","chartData","category","value1","value2","dispatch","selectedOption","state","dropdown","value","then","data","catch","error","console","chartOptions","chart","type","title","text","xAxis","categories","map","item","yAxis","series","name","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/REACT/weblight-task/src/components/DropDownChart.js"],"sourcesContent":["// DynamicHighchart.js\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport fetchChartData from \"../redux/chartdataSlice\";\nimport { setChartData } from \"../redux/chartdataSlice\";\n\nconst DynamicHighchart = () => {\n  // Sample chart data structure\n  const chartData = [\n    { category: \"Week<br/>Changes<br/>Contributer\", value1: 10, value2: 20 },\n    { category: \"Week<br/>Changes<br/>Contributer\", value1: 20, value2: 30 },\n    { category: \"Week<br/>Changes<br/>Contributer\", value1: 50, value2: 75 },\n    { category: \"Week<br/>Changes<br/>Contributer\", value1: 50, value2: 75 },\n    { category: 'Week<br/>Changes<br/>Contributer', value1: 50, value2: 75 },\n    { category: 'Week<br/>Changes<br/>Contributer', value1: 50, value2: 75 },\n    { category: 'Week<br/>Changes<br/>Contributer', value1: 50, value2: 75 },\n    // ... more data\n  ];\n\n  const dispatch = useDispatch();\n  const selectedOption = useSelector((state) => state.dropdown.selectedOption);\n\n  useEffect(() => {\n    if (selectedOption) {\n      fetchChartData(selectedOption.value)\n        .then((data) => {\n          dispatch(setChartData(data)); // Dispatch the actual action to update chart data\n        })\n        .catch((error) => {\n          console.error(\"Error fetching chart data:\", error);\n        });\n    }\n  }, [dispatch, selectedOption]);\n\n  const chartOptions = {\n    chart: {\n      type: \"line\", // Specify the chart type (line, column, bar, etc.)\n    },\n    title: {\n      text: \"Total Changes\" \n    },\n    xAxis: {\n      categories: chartData.map((item) => item.category), // Replace with your actual data property\n      title: {\n        text: \"X-Axis Label\",\n      },\n    },\n    yAxis: {\n      title: {\n        text: \"Y-Axis Label\",\n      },\n    },\n    series: [\n      {\n        name: \"Series 1\",\n        data: chartData.map((item) => item.value1), // Replace with your actual data property\n      },\n      \n    ],\n    // Add more configuration options as needed\n  };\n\n  return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n  \n};\n\nexport default DynamicHighchart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}