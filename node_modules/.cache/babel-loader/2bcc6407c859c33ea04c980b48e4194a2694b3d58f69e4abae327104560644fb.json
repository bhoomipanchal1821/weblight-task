{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT/weblight-task/src/components/DropDownChart.js\",\n  _s = $RefreshSig$();\n// DynamicHighchart.js\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n// import { fetchChartData } from './UserService';\n// import { setChartData } from '../redux/chartdataSlice';\n\n// const DynamicHighchart = () => {\n//     // Sample chart data structure\n// const chartData = [\n//     { category: 'Week 1', value1: 10, value2: 20 },\n//     { category: 'Week 2', value1: 15, value2: 25 },\n//     // ... more data\n//   ];\n\n//   const dispatch = useDispatch();\n//   const selectedOption = useSelector((state) => state.dropdown.selectedOption);\n\n//   useEffect(() => {\n//     if (selectedOption) {\n//       fetchChartData(selectedOption.value)\n//         .then((data) => {\n//           dispatch(setChartData(data)); // Dispatch the actual action to update chart data\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching chart data:', error);\n//         });\n//     }\n//   }, [dispatch, selectedOption]);\n\n//   const chartOptions = {\n//     chart: {\n//       type: 'line', // Specify the chart type (line, column, bar, etc.)\n//     },\n//     title: {\n//       text: `Dynamic Highchart for ${selectedOption?.label || 'No Option Selected'}`,\n//     },\n//     xAxis: {\n//       categories: chartData.map((item) => item.category), //    \n//       title: {\n//         text: 'X-Axis Label',\n//       },\n//     },\n//     yAxis: {\n//       title: {\n//         text: 'Y-Axis Label',\n//       },\n//     },\n//     series: [\n//       {\n//         name: 'Series 1',\n//         data: chartData.map((item) => item.value1), // Replace with your actual data property\n//       },\n//       {\n//         name: 'Series 2',\n//         data: chartData.map((item) => item.value2), // Replace with your actual data property\n//       },\n//     ],\n//     // Add more configuration options as needed\n//   };\n\n//   return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n// };\n\n// export default DynamicHighchart;\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n// import moment from \"moment\"\n// console.log(moment.now())\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Active = () => {\n  _s();\n  // const timestampNow = Date.now()\n  const [dataChile, setDataChile] = useState([]);\n  const API_URL = \"https://chile-coronapi1.p.rapidapi.com/v3/historical/nation\";\n  const axiosOptions = {\n    headers: {\n      \"x-rapidapi-host\": \"chile-coronapi1.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"5afb9539b2msh32d0d06f16fd204p1e11cdjsn9a53fbf1c1f7\"\n    }\n  };\n  useEffect(() => {\n    Axios.get(API_URL, axiosOptions).then(data => {\n      return data;\n    }).then(data => {\n      const dataArr = Object.values(data.data);\n      return setDataChile(dataArr);\n    }).catch(err => {\n      return err;\n    });\n  }, []);\n\n  // Tranformed the object the fetch axios have returned by matrix\n  // const dataChileReady = Object.values(dataChile)\n\n  const prueba = dataChile.map(o => [new Date(o.day).getTime(), o.confirmed]);\n  console.log(prueba);\n  const [chartOptions, setChartOptions] = useState({\n    xAxis: {\n      type: \"datetime\"\n    },\n    yAxis: {},\n    series: [{\n      type: \"line\",\n      data: [dataChile.map(row => {\n        return [`${new Date(row.day).getTime()}`, `${row.confirmed}`];\n      })]\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Active, \"INeSVqOogVO/+jVDnK5TZzpiLj4=\");\n_c = Active;\nexport default Active;\nvar _c;\n$RefreshReg$(_c, \"Active\");","map":{"version":3,"names":["React","useState","useEffect","Axios","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","Active","_s","dataChile","setDataChile","API_URL","axiosOptions","headers","get","then","data","dataArr","Object","values","catch","err","prueba","map","o","Date","day","getTime","confirmed","console","log","chartOptions","setChartOptions","xAxis","type","yAxis","series","row","children","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/REACT/weblight-task/src/components/DropDownChart.js"],"sourcesContent":["\n// DynamicHighchart.js\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n// import { fetchChartData } from './UserService';\n// import { setChartData } from '../redux/chartdataSlice';\n\n// const DynamicHighchart = () => {\n//     // Sample chart data structure\n// const chartData = [\n//     { category: 'Week 1', value1: 10, value2: 20 },\n//     { category: 'Week 2', value1: 15, value2: 25 },\n//     // ... more data\n//   ];\n  \n//   const dispatch = useDispatch();\n//   const selectedOption = useSelector((state) => state.dropdown.selectedOption);\n  \n\n//   useEffect(() => {\n//     if (selectedOption) {\n//       fetchChartData(selectedOption.value)\n//         .then((data) => {\n//           dispatch(setChartData(data)); // Dispatch the actual action to update chart data\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching chart data:', error);\n//         });\n//     }\n//   }, [dispatch, selectedOption]);\n\n//   const chartOptions = {\n//     chart: {\n//       type: 'line', // Specify the chart type (line, column, bar, etc.)\n//     },\n//     title: {\n//       text: `Dynamic Highchart for ${selectedOption?.label || 'No Option Selected'}`,\n//     },\n//     xAxis: {\n//       categories: chartData.map((item) => item.category), //    \n//       title: {\n//         text: 'X-Axis Label',\n//       },\n//     },\n//     yAxis: {\n//       title: {\n//         text: 'Y-Axis Label',\n//       },\n//     },\n//     series: [\n//       {\n//         name: 'Series 1',\n//         data: chartData.map((item) => item.value1), // Replace with your actual data property\n//       },\n//       {\n//         name: 'Series 2',\n//         data: chartData.map((item) => item.value2), // Replace with your actual data property\n//       },\n//     ],\n//     // Add more configuration options as needed\n//   };\n\n//   return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n// };\n\n// export default DynamicHighchart;\n\n\nimport React, { useState, useEffect } from \"react\"\nimport Axios from \"axios\"\n// import moment from \"moment\"\n// console.log(moment.now())\nimport Highcharts from \"highcharts/highstock\"\nimport HighchartsReact from \"highcharts-react-official\"\n\nconst Active = () => {\n  // const timestampNow = Date.now()\n  const [dataChile, setDataChile] = useState([])\n\n  const API_URL = \"https://chile-coronapi1.p.rapidapi.com/v3/historical/nation\"\n  const axiosOptions = {\n    headers: {\n      \"x-rapidapi-host\": \"chile-coronapi1.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"5afb9539b2msh32d0d06f16fd204p1e11cdjsn9a53fbf1c1f7\",\n    },\n  }\n\n  useEffect(() => {\n    Axios.get(API_URL, axiosOptions)\n      .then(data => {\n        return data\n      })\n      .then(data => {\n        const dataArr = Object.values(data.data)\n        return setDataChile(dataArr)\n      })\n      .catch(err => {\n        return err\n      })\n  }, [])\n\n  // Tranformed the object the fetch axios have returned by matrix\n  // const dataChileReady = Object.values(dataChile)\n\n  const prueba = dataChile.map(o => [new Date(o.day).getTime(), o.confirmed])\n\n  console.log(prueba)\n\n  const [chartOptions, setChartOptions] = useState({\n    xAxis: {\n      type: \"datetime\",\n    },\n    yAxis: {},\n    series: [\n      {\n        type: \"line\",\n        data: [\n          dataChile.map(row => {\n            return [`${new Date(row.day).getTime()}`, `${row.confirmed}`]\n          }),\n        ],\n      },\n    ],\n  })\n\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n    </div>\n  )\n}\n\nexport default Active"],"mappings":";;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AACA,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,eAAe,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,OAAO,GAAG,6DAA6D;EAC7E,MAAMC,YAAY,GAAG;IACnBC,OAAO,EAAE;MACP,iBAAiB,EAAE,gCAAgC;MACnD,gBAAgB,EAAE;IACpB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdC,KAAK,CAACY,GAAG,CAACH,OAAO,EAAEC,YAAY,CAAC,CAC7BG,IAAI,CAACC,IAAI,IAAI;MACZ,OAAOA,IAAI;IACb,CAAC,CAAC,CACDD,IAAI,CAACC,IAAI,IAAI;MACZ,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACH,IAAI,CAACA,IAAI,CAAC;MACxC,OAAON,YAAY,CAACO,OAAO,CAAC;IAC9B,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAI;MACZ,OAAOA,GAAG;IACZ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;;EAEA,MAAMC,MAAM,GAAGb,SAAS,CAACc,GAAG,CAACC,CAAC,IAAI,CAAC,IAAIC,IAAI,CAACD,CAAC,CAACE,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC,EAAEH,CAAC,CAACI,SAAS,CAAC,CAAC;EAE3EC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EAEnB,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC;IAC/CiC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE,CAAC,CAAC;IACTC,MAAM,EAAE,CACN;MACEF,IAAI,EAAE,MAAM;MACZlB,IAAI,EAAE,CACJP,SAAS,CAACc,GAAG,CAACc,GAAG,IAAI;QACnB,OAAO,CAAE,GAAE,IAAIZ,IAAI,CAACY,GAAG,CAACX,GAAG,CAAC,CAACC,OAAO,CAAC,CAAE,EAAC,EAAG,GAAEU,GAAG,CAACT,SAAU,EAAC,CAAC;MAC/D,CAAC,CAAC;IAEN,CAAC;EAEL,CAAC,CAAC;EAEF,oBACEtB,OAAA;IAAAgC,QAAA,eACEhC,OAAA,CAACF,eAAe;MAACmC,UAAU,EAAEpC,UAAW;MAACqC,OAAO,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAAApC,EAAA,CAvDKD,MAAM;AAAAsC,EAAA,GAANtC,MAAM;AAyDZ,eAAeA,MAAM;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}