{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT/weblight-task/src/components/DropDownChart.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import HighchartsReact from \"highcharts-react-official\";\n// import Highcharts from \"highcharts\";\n\n// const Chart = ({ chartRef, setChartInfo }) => {\n//   const [options] = useState({\n//     plotOptions: {\n//       series: {\n//         point: {\n\n//         }\n//       }\n//     },\n//     series: [\n//       {\n//         data: [2, 7, 5, 1, 4]\n//       },\n//       {\n//         data: [4, 3, 5, 6, 2, 3]\n//       }\n//     ]\n//   });\n\n//   return (\n//     <HighchartsReact ref={chartRef} highcharts={Highcharts} options={options} />\n//   );\n// };\n\n// export default Chart;\n// Highchart.js\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n\n// const Highchart = () => {\n//   const selectedOption = useSelector((state) => state.dropdown.selectedOption);\n\n//   const chartOptions = {\n//     // Highcharts configuration options\n//     title: {\n//       text: `Highchart for ${selectedOption?.label || 'No Option Selected'}`,\n//     },\n//     // ... other Highcharts options\n//   };\n\n//   return (\n//     <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n//   );\n// };\n\n// export default Highchart;\n// CodeFrequencyChart.js\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { fetchCodeFrequency } from './CodeFrequencyService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeFrequencyChart = ({\n  owner,\n  repo\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const codeFrequencyData = useSelector(state => state.codeFrequency.data);\n  useEffect(() => {\n    fetchCodeFrequency(owner, repo);\n  }, [owner, repo]);\n  const chartOptions = {\n    chart: {\n      type: 'area'\n    },\n    title: {\n      text: `Code Frequency for ${owner}/${repo}`\n    },\n    xAxis: {\n      categories: codeFrequencyData.map(week => week[0]),\n      title: {\n        text: 'Weeks'\n      }\n    },\n    yAxis: {\n      title: {\n        text: 'Total Changes'\n      }\n    },\n    series: [{\n      name: 'Additions',\n      data: codeFrequencyData.map(week => week[1])\n    }, {\n      name: 'Deletions',\n      data: codeFrequencyData.map(week => week[2])\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n    highcharts: Highcharts,\n    options: chartOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s(CodeFrequencyChart, \"y7lIZaedfLA7sD6Jl3NLEn7IICg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CodeFrequencyChart;\nexport default CodeFrequencyChart;\nvar _c;\n$RefreshReg$(_c, \"CodeFrequencyChart\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Highcharts","HighchartsReact","fetchCodeFrequency","jsxDEV","_jsxDEV","CodeFrequencyChart","owner","repo","_s","dispatch","codeFrequencyData","state","codeFrequency","data","chartOptions","chart","type","title","text","xAxis","categories","map","week","yAxis","series","name","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/REACT/weblight-task/src/components/DropDownChart.js"],"sourcesContent":["// import { useState } from \"react\";\n// import HighchartsReact from \"highcharts-react-official\";\n// import Highcharts from \"highcharts\";\n\n// const Chart = ({ chartRef, setChartInfo }) => {\n//   const [options] = useState({\n//     plotOptions: {\n//       series: {\n//         point: {\n          \n//         }\n//       }\n//     },\n//     series: [\n//       {\n//         data: [2, 7, 5, 1, 4]\n//       },\n//       {\n//         data: [4, 3, 5, 6, 2, 3]\n//       }\n//     ]\n//   });\n\n//   return (\n//     <HighchartsReact ref={chartRef} highcharts={Highcharts} options={options} />\n//   );\n// };\n\n// export default Chart;\n// Highchart.js\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n\n// const Highchart = () => {\n//   const selectedOption = useSelector((state) => state.dropdown.selectedOption);\n\n//   const chartOptions = {\n//     // Highcharts configuration options\n//     title: {\n//       text: `Highchart for ${selectedOption?.label || 'No Option Selected'}`,\n//     },\n//     // ... other Highcharts options\n//   };\n\n//   return (\n//     <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n//   );\n// };\n\n// export default Highchart;\n// CodeFrequencyChart.js\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { fetchCodeFrequency } from './CodeFrequencyService';\n\nconst CodeFrequencyChart = ({ owner, repo }) => {\n  const dispatch = useDispatch();\n  const codeFrequencyData = useSelector((state) => state.codeFrequency.data);\n\n  useEffect(() => {\n    fetchCodeFrequency(owner, repo);\n  }, [owner, repo]);\n\n  const chartOptions = {\n    chart: {\n      type: 'area',\n    },\n    title: {\n      text: `Code Frequency for ${owner}/${repo}`,\n    },\n    xAxis: {\n      categories: codeFrequencyData.map((week) => week[0]),\n      title: {\n        text: 'Weeks',\n      },\n    },\n    yAxis: {\n      title: {\n        text: 'Total Changes',\n      },\n    },\n    series: [\n      {\n        name: 'Additions',\n        data: codeFrequencyData.map((week) => week[1]),\n      },\n      {\n        name: 'Deletions',\n        data: codeFrequencyData.map((week) => week[2]),\n      },\n    ],\n  };\n\n  return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n};\n\nexport default CodeFrequencyChart;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,kBAAkB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,iBAAiB,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,aAAa,CAACC,IAAI,CAAC;EAE1EhB,SAAS,CAAC,MAAM;IACdK,kBAAkB,CAACI,KAAK,EAAEC,IAAI,CAAC;EACjC,CAAC,EAAE,CAACD,KAAK,EAAEC,IAAI,CAAC,CAAC;EAEjB,MAAMO,YAAY,GAAG;IACnBC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAG,sBAAqBZ,KAAM,IAAGC,IAAK;IAC5C,CAAC;IACDY,KAAK,EAAE;MACLC,UAAU,EAAEV,iBAAiB,CAACW,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,CAAC;MACpDL,KAAK,EAAE;QACLC,IAAI,EAAE;MACR;IACF,CAAC;IACDK,KAAK,EAAE;MACLN,KAAK,EAAE;QACLC,IAAI,EAAE;MACR;IACF,CAAC;IACDM,MAAM,EAAE,CACN;MACEC,IAAI,EAAE,WAAW;MACjBZ,IAAI,EAAEH,iBAAiB,CAACW,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC,EACD;MACEG,IAAI,EAAE,WAAW;MACjBZ,IAAI,EAAEH,iBAAiB,CAACW,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC;EAEL,CAAC;EAED,oBAAOlB,OAAA,CAACH,eAAe;IAACyB,UAAU,EAAE1B,UAAW;IAAC2B,OAAO,EAAEb;EAAa;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E,CAAC;AAACvB,EAAA,CAvCIH,kBAAkB;EAAA,QACLP,WAAW,EACFC,WAAW;AAAA;AAAAiC,EAAA,GAFjC3B,kBAAkB;AAyCxB,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}