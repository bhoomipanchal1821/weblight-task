{"ast":null,"code":"import axios from \"axios\";\nimport { fetchCommitDataStart, fetchCommitDataSuccess, fetchCommitDataFailure } from \"../redux/chartdataSlice\";\nexport const fetchCommitData = (owner, repo) => async dispatch => {\n  try {\n    dispatch(fetchCommitDataStart());\n\n    // Replace 'https://api.example.com/commit-data' with your actual API endpoint\n    const response = await axios.get(`https://api.example.com/commit-data/${owner}/${repo}`);\n    const data = response.data;\n    dispatch(fetchCommitDataSuccess(data));\n  } catch (error) {\n    dispatch(fetchCommitDataFailure(error.message));\n  }\n};","map":{"version":3,"names":["axios","fetchCommitDataStart","fetchCommitDataSuccess","fetchCommitDataFailure","fetchCommitData","owner","repo","dispatch","response","get","data","error","message"],"sources":["/var/www/html/REACT/weblight-task/src/components/commitdataThunks.js"],"sourcesContent":["\nimport axios from \"axios\";\nimport {\n  fetchCommitDataStart,\n  fetchCommitDataSuccess,\n  fetchCommitDataFailure,\n} from \"../redux/chartdataSlice\";\nexport const fetchCommitData = (owner, repo) => async (dispatch) => {\n  try {\n    dispatch(fetchCommitDataStart());\n\n    // Replace 'https://api.example.com/commit-data' with your actual API endpoint\n    const response = await axios.get(\n      `https://api.example.com/commit-data/${owner}/${repo}`\n    );\n    const data = response.data;\n\n    dispatch(fetchCommitDataSuccess(data));\n  } catch (error) {\n    dispatch(fetchCommitDataFailure(error.message));\n  }\n};\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,oBAAoB,EACpBC,sBAAsB,EACtBC,sBAAsB,QACjB,yBAAyB;AAChC,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK,MAAOC,QAAQ,IAAK;EAClE,IAAI;IACFA,QAAQ,CAACN,oBAAoB,CAAC,CAAC,CAAC;;IAEhC;IACA,MAAMO,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC7B,uCAAsCJ,KAAM,IAAGC,IAAK,EACvD,CAAC;IACD,MAAMI,IAAI,GAAGF,QAAQ,CAACE,IAAI;IAE1BH,QAAQ,CAACL,sBAAsB,CAACQ,IAAI,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdJ,QAAQ,CAACJ,sBAAsB,CAACQ,KAAK,CAACC,OAAO,CAAC,CAAC;EACjD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}