{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT/weblight-task/src/components/DropDown.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react'\n// export default function Posts() {\n//   const [api, setapi] = useState([])\n//   const API = 'https://api.github.com/repos/octocat/hello-world/stats/code_frequency';\n//   const fetchPost = () => {\n//     fetch(API)\n//       .then((res) => res.json())\n//       .then((res) => {\n//         console.log(res)\n//         setapi(res)\n//       })\n//   }\n//   useEffect(() => {\n//     fetchPost()\n//   }, [])\n//   return (\n//     <>\n//       <h2>React Fetch Data with REST API Example</h2>\n//       <ul>\n//         {api.map((item, i) => {\n//           return <li key={i}>{item}</li>\n//         })}\n//       </ul>\n//     </>\n//   )\n// }\n// UserDropdown.js\n\n// import React, { useEffect,useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchUsers } from './UserService';\n// import { selectUser } from '../redux/userSlice';\n\n// const UserDropdown = () => {\n//   const dispatch = useDispatch();\n//   const [employees, setEmployees] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch users when the component mounts\n//     fetchUsers();\n//   }, []);\n\n//   const handleUserChange = (event) => {\n//     const selectedUserId = event.target.value;\n//     const selectedUserData = employees.find((user) => user.id === selectedUserId);\n//     dispatch(selectUser(selectedUserData));\n//   };\n\n//   return (\n//     <div>\n//       <label>Select User:</label>\n//       <select onChange={handleUserChange} value={setEmployees?.id || ''}>\n//         <option value=\"\" disabled>Select a user</option>\n//         {employees?.map(user => {\n//           return <option key={user.id} value={user.id}>\n//             {user.name}\n//           </option>\n//         })}\n\n//       </select>\n//       {setEmployees && (\n//         <div>\n//           <h2>Selected User</h2>\n//           <p>Name: {setEmployees.name}</p>\n//           <p>Email: {setEmployees.email}</p>\n//           {/* Add more user details as needed */}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UserDropdown;\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  chartRef,\n  setChartInfo\n}) => {\n  _s();\n  const [options] = useState({\n    plotOptions: {\n      series: {\n        point: {}\n      }\n    },\n    series: [{\n      data: [2, 7, 5, 1, 4]\n    }, {\n      data: [4, 3, 5, 6, 2, 3]\n    }]\n  });\n  const dispatch = useDispatch();\n  const codeFrequency = useSelector(state => state.codeFrequency);\n  const [displayType, setDisplayType] = useState('both'); // Default display type is both\n\n  useEffect(() => {\n    const fetchCodeFrequency = async () => {\n      const response = await fetch(`https://api.github.com/repos/octocat/hello-world/stats/code_frequency`);\n      const data = await response.json();\n      dispatch({\n        type: 'codeFrequency/fetchCodeFrequency',\n        payload: data\n      });\n    };\n    fetchCodeFrequency();\n  }, [dispatch, repoName, owner]);\n  const handleDisplayTypeChange = event => {\n    setDisplayType(event.target.value);\n  };\n  const contributorsData = codeFrequency === null || codeFrequency === void 0 ? void 0 : codeFrequency.map(week => ({\n    timestamp: week[0],\n    contributors: week.slice(1)\n  }));\n  const uniqueContributors = Array.from(new Set(contributorsData === null || contributorsData === void 0 ? void 0 : contributorsData.flatMap(data => data.contributors.map(c => c.author))));\n  const chartOptions = {\n    chart: {\n      type: 'line'\n    },\n    title: {\n      text: `Commit Activity for ${repoName}`\n    },\n    xAxis: {\n      categories: contributorsData === null || contributorsData === void 0 ? void 0 : contributorsData.map(data => data.timestamp),\n      title: {\n        text: 'Timestamp'\n      }\n    },\n    yAxis: {\n      title: {\n        text: 'Total Changes'\n      }\n    },\n    tooltip: {\n      formatter: function () {\n        const contributorData = this.points[0].point.contributorData[this.series.name];\n        return `Timestamp: ${this.x}<br/>Changes: ${this.y}<br/>Contributor: ${contributorData.author}`;\n      },\n      shared: true\n    },\n    plotOptions: {\n      series: {\n        marker: {\n          enabled: false\n        }\n      }\n    },\n    series: uniqueContributors === null || uniqueContributors === void 0 ? void 0 : uniqueContributors.map((contributor, index) => ({\n      name: contributor,\n      data: contributorsData.map(data => {\n        const contributorData = data.contributors.find(c => c.author === contributor) || {\n          total: 0\n        };\n        return {\n          y: displayType === 'additions' ? contributorData.total.additions : contributorData.total.deletions,\n          contributorData\n        };\n      }),\n      visible: true\n    }))\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Commit Activity for \", repoName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Display Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: displayType,\n        onChange: handleDisplayTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"additions\",\n          children: \"Additions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"deletions\",\n          children: \"Deletions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"both\",\n          children: \"Both\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      ref: chartRef,\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart, \"PEsFCAAs2Rcbpt9lDahY7/sNz8I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","Chart","chartRef","setChartInfo","_s","options","plotOptions","series","point","data","dispatch","codeFrequency","state","displayType","setDisplayType","fetchCodeFrequency","response","fetch","json","type","payload","repoName","owner","handleDisplayTypeChange","event","target","value","contributorsData","map","week","timestamp","contributors","slice","uniqueContributors","Array","from","Set","flatMap","c","author","chartOptions","chart","title","text","xAxis","categories","yAxis","tooltip","formatter","contributorData","points","name","x","y","shared","marker","enabled","contributor","index","find","total","additions","deletions","visible","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","ref","highcharts","_c","$RefreshReg$"],"sources":["/var/www/html/REACT/weblight-task/src/components/DropDown.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react'\n// export default function Posts() {\n//   const [api, setapi] = useState([])\n//   const API = 'https://api.github.com/repos/octocat/hello-world/stats/code_frequency';\n//   const fetchPost = () => {\n//     fetch(API)\n//       .then((res) => res.json())\n//       .then((res) => {\n//         console.log(res)\n//         setapi(res)\n//       })\n//   }\n//   useEffect(() => {\n//     fetchPost()\n//   }, [])\n//   return (\n//     <>\n//       <h2>React Fetch Data with REST API Example</h2>\n//       <ul>\n//         {api.map((item, i) => {\n//           return <li key={i}>{item}</li>\n//         })}\n//       </ul>\n//     </>\n//   )\n// }\n// UserDropdown.js\n\n// import React, { useEffect,useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchUsers } from './UserService';\n// import { selectUser } from '../redux/userSlice';\n\n// const UserDropdown = () => {\n//   const dispatch = useDispatch();\n//   const [employees, setEmployees] = useState([]);\n \n\n//   useEffect(() => {\n//     // Fetch users when the component mounts\n//     fetchUsers();\n//   }, []);\n\n//   const handleUserChange = (event) => {\n//     const selectedUserId = event.target.value;\n//     const selectedUserData = employees.find((user) => user.id === selectedUserId);\n//     dispatch(selectUser(selectedUserData));\n//   };\n\n//   return (\n//     <div>\n//       <label>Select User:</label>\n//       <select onChange={handleUserChange} value={setEmployees?.id || ''}>\n//         <option value=\"\" disabled>Select a user</option>\n//         {employees?.map(user => {\n//           return <option key={user.id} value={user.id}>\n//             {user.name}\n//           </option>\n//         })}\n        \n//       </select>\n//       {setEmployees && (\n//         <div>\n//           <h2>Selected User</h2>\n//           <p>Name: {setEmployees.name}</p>\n//           <p>Email: {setEmployees.email}</p>\n//           {/* Add more user details as needed */}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UserDropdown;\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\n\nconst Chart = ({ chartRef, setChartInfo }) => {\n      const [options] = useState({\n        plotOptions: {\n          series: {\n            point: {\n              \n            }\n          }\n        },\n        series: [\n          {\n            data: [2, 7, 5, 1, 4]\n          },\n          {\n            data: [4, 3, 5, 6, 2, 3]\n          }\n        ]\n      });\n    \n  const dispatch = useDispatch();\n  const codeFrequency = useSelector((state) => state.codeFrequency);\n\n  const [displayType, setDisplayType] = useState('both'); // Default display type is both\n\n  useEffect(() => {\n    const fetchCodeFrequency = async () => {\n      const response = await fetch(`https://api.github.com/repos/octocat/hello-world/stats/code_frequency`);\n      const data = await response.json();\n      dispatch({ type: 'codeFrequency/fetchCodeFrequency', payload: data });\n    };\n\n    fetchCodeFrequency();\n  }, [dispatch, repoName, owner]);\n\n  const handleDisplayTypeChange = (event) => {\n    setDisplayType(event.target.value);\n  };\n\n  const contributorsData = codeFrequency?.map((week) => ({\n    timestamp: week[0],\n    contributors: week.slice(1),\n  }));\n\n  const uniqueContributors = Array.from(new Set(contributorsData?.flatMap((data) => data.contributors.map((c) => c.author))));\n\n  const chartOptions = {\n    chart: {\n      type: 'line',\n    },\n    title: {\n      text: `Commit Activity for ${repoName}`,\n    },\n    xAxis: {\n      categories: contributorsData?.map((data) => data.timestamp),\n      title: {\n        text: 'Timestamp',\n      },\n    },\n    yAxis: {\n      title: {\n        text: 'Total Changes',\n      },\n    },\n    tooltip: {\n      formatter: function () {\n        const contributorData = this.points[0].point.contributorData[this.series.name];\n        return `Timestamp: ${this.x}<br/>Changes: ${this.y}<br/>Contributor: ${contributorData.author}`;\n      },\n      shared: true,\n    },\n    plotOptions: {\n      series: {\n        marker: {\n          enabled: false,\n        },\n      },\n    },\n    series: uniqueContributors?.map((contributor, index) => ({\n      name: contributor,\n      data: contributorsData.map((data) => {\n        const contributorData = data.contributors.find((c) => c.author === contributor) || { total: 0 };\n        return {\n          y: displayType === 'additions' ? contributorData.total.additions : contributorData.total.deletions,\n          contributorData,\n        };\n      }),\n      visible: true, \n    })),\n  };\n  \n  return (\n    <div>\n      <h2>Commit Activity for {repoName}</h2>\n      <label>\n        Display Type:\n        <select value={displayType} onChange={handleDisplayTypeChange}>\n          <option value=\"additions\">Additions</option>\n          <option value=\"deletions\">Deletions</option>\n          <option value=\"both\">Both</option>\n        </select>\n      </label>\n\n      <HighchartsReact ref={chartRef} highcharts={Highcharts} options={options} />\n    </div>\n  );\n};\n\nexport default Chart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}