{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT/weblight-task/src/components/DropDownChart.js\",\n  _s = $RefreshSig$();\n// DynamicHighchart.js\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { fetchChartData } from './UserService';\nimport { setChartData } from './chartDataSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicHighchart = () => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedOption = useSelector(state => state.dropdown.selectedOption);\n  const chartData = useSelector(state => state.chartData.data);\n  useEffect(() => {\n    if (selectedOption) {\n      fetchChartData(selectedOption.value).then(data => {\n        dispatch(setChartData(data)); // Dispatch the actual action to update chart data\n      }).catch(error => {\n        console.error('Error fetching chart data:', error);\n      });\n    }\n  }, [dispatch, selectedOption]);\n  const chartOptions = {\n    chart: {\n      type: 'line' // Specify the chart type (line, column, bar, etc.)\n    },\n    title: {\n      text: `Dynamic Highchart for ${(selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.label) || 'No Option Selected'}`\n    },\n    xAxis: {\n      categories: chartData.map(item => item.category),\n      // Replace with your actual data property\n      title: {\n        text: 'X-Axis Label'\n      }\n    },\n    yAxis: {\n      title: {\n        text: 'Y-Axis Label'\n      }\n    },\n    series: [{\n      name: 'Series 1',\n      data: chartData.map(item => item.value1) // Replace with your actual data property\n    }, {\n      name: 'Series 2',\n      data: chartData.map(item => item.value2) // Replace with your actual data property\n    }]\n    // Add more configuration options as needed\n  };\n  return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n    highcharts: Highcharts,\n    options: chartOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(DynamicHighchart, \"hpeArCTeaKtDGayVMnKxch1NXX0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = DynamicHighchart;\nexport default DynamicHighchart;\nvar _c;\n$RefreshReg$(_c, \"DynamicHighchart\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Highcharts","HighchartsReact","fetchChartData","setChartData","jsxDEV","_jsxDEV","DynamicHighchart","_s","dispatch","selectedOption","state","dropdown","chartData","data","value","then","catch","error","console","chartOptions","chart","type","title","text","label","xAxis","categories","map","item","category","yAxis","series","name","value1","value2","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/REACT/weblight-task/src/components/DropDownChart.js"],"sourcesContent":["\n// DynamicHighchart.js\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { fetchChartData } from './UserService';\nimport { setChartData } from './chartDataSlice';\n\nconst DynamicHighchart = () => {\n  const dispatch = useDispatch();\n  const selectedOption = useSelector((state) => state.dropdown.selectedOption);\n  const chartData = useSelector((state) => state.chartData.data);\n\n  useEffect(() => {\n    if (selectedOption) {\n      fetchChartData(selectedOption.value)\n        .then((data) => {\n          dispatch(setChartData(data)); // Dispatch the actual action to update chart data\n        })\n        .catch((error) => {\n          console.error('Error fetching chart data:', error);\n        });\n    }\n  }, [dispatch, selectedOption]);\n\n  const chartOptions = {\n    chart: {\n      type: 'line', // Specify the chart type (line, column, bar, etc.)\n    },\n    title: {\n      text: `Dynamic Highchart for ${selectedOption?.label || 'No Option Selected'}`,\n    },\n    xAxis: {\n      categories: chartData.map((item) => item.category), // Replace with your actual data property\n      title: {\n        text: 'X-Axis Label',\n      },\n    },\n    yAxis: {\n      title: {\n        text: 'Y-Axis Label',\n      },\n    },\n    series: [\n      {\n        name: 'Series 1',\n        data: chartData.map((item) => item.value1), // Replace with your actual data property\n      },\n      {\n        name: 'Series 2',\n        data: chartData.map((item) => item.value2), // Replace with your actual data property\n      },\n    ],\n    // Add more configuration options as needed\n  };\n\n  return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n};\n\nexport default DynamicHighchart;\n"],"mappings":";;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,cAAc,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACF,cAAc,CAAC;EAC5E,MAAMG,SAAS,GAAGb,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACE,SAAS,CAACC,IAAI,CAAC;EAE9DhB,SAAS,CAAC,MAAM;IACd,IAAIY,cAAc,EAAE;MAClBP,cAAc,CAACO,cAAc,CAACK,KAAK,CAAC,CACjCC,IAAI,CAAEF,IAAI,IAAK;QACdL,QAAQ,CAACL,YAAY,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACT,QAAQ,EAAEC,cAAc,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAG;IACnBC,KAAK,EAAE;MACLC,IAAI,EAAE,MAAM,CAAE;IAChB,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAG,yBAAwB,CAAAd,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEe,KAAK,KAAI,oBAAqB;IAC/E,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAEd,SAAS,CAACe,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;MAAE;MACpDP,KAAK,EAAE;QACLC,IAAI,EAAE;MACR;IACF,CAAC;IACDO,KAAK,EAAE;MACLR,KAAK,EAAE;QACLC,IAAI,EAAE;MACR;IACF,CAAC;IACDQ,MAAM,EAAE,CACN;MACEC,IAAI,EAAE,UAAU;MAChBnB,IAAI,EAAED,SAAS,CAACe,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACK,MAAM,CAAC,CAAE;IAC9C,CAAC,EACD;MACED,IAAI,EAAE,UAAU;MAChBnB,IAAI,EAAED,SAAS,CAACe,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACM,MAAM,CAAC,CAAE;IAC9C,CAAC;IAEH;EACF,CAAC;EAED,oBAAO7B,OAAA,CAACJ,eAAe;IAACkC,UAAU,EAAEnC,UAAW;IAACoC,OAAO,EAAEjB;EAAa;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E,CAAC;AAACjC,EAAA,CAjDID,gBAAgB;EAAA,QACHR,WAAW,EACLC,WAAW,EAChBA,WAAW;AAAA;AAAA0C,EAAA,GAHzBnC,gBAAgB;AAmDtB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}