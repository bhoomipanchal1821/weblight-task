{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT/weblight-task/src/components/DropDown.js\",\n  _s = $RefreshSig$();\n// UserDropdownHighcharts.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { fetchUsers } from './components/userService';\nimport { selectUser } from './userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDropdownHighcharts = () => {\n  _s();\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users.data);\n  const selectedUser = useSelector(state => state.users.selectedUser);\n  useEffect(() => {\n    // Fetch users when the component mounts\n    fetchUsers();\n  }, []);\n  const handleUserChange = selectedOption => {\n    const selectedUserId = selectedOption.value;\n    const selectedUserData = users.find(user => user.id === selectedUserId);\n    dispatch(selectUser(selectedUserData));\n  };\n  const chartOptions = {\n    // Highcharts configuration options\n    title: {\n      text: `Commit Activity for ${selectedUser ? selectedUser.name : ''}`\n    }\n    // ... other Highcharts options\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select User:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: users.map(user => ({\n        value: user.id,\n        label: user.name\n      })),\n      onChange: handleUserChange,\n      value: selectedUser ? {\n        value: selectedUser.id,\n        label: selectedUser.name\n      } : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", selectedUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", selectedUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDropdownHighcharts, \"j5NhV6Z4cS4FU8jzAt3Y8wOFofs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = UserDropdownHighcharts;\nexport default UserDropdownHighcharts;\nvar _c;\n$RefreshReg$(_c, \"UserDropdownHighcharts\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Select","Highcharts","HighchartsReact","fetchUsers","selectUser","jsxDEV","_jsxDEV","UserDropdownHighcharts","_s","dispatch","users","state","data","selectedUser","handleUserChange","selectedOption","selectedUserId","value","selectedUserData","find","user","id","chartOptions","title","text","name","children","fileName","_jsxFileName","lineNumber","columnNumber","options","map","label","onChange","email","highcharts","_c","$RefreshReg$"],"sources":["/var/www/html/REACT/weblight-task/src/components/DropDown.js"],"sourcesContent":["// UserDropdownHighcharts.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { fetchUsers } from './components/userService';\nimport { selectUser } from './userSlice';\n\nconst UserDropdownHighcharts = () => {\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users.data);\n  const selectedUser = useSelector((state) => state.users.selectedUser);\n\n  useEffect(() => {\n    // Fetch users when the component mounts\n    fetchUsers();\n  }, []);\n\n  const handleUserChange = (selectedOption) => {\n    const selectedUserId = selectedOption.value;\n    const selectedUserData = users.find((user) => user.id === selectedUserId);\n    dispatch(selectUser(selectedUserData));\n  };\n\n  const chartOptions = {\n    // Highcharts configuration options\n    title: {\n      text: `Commit Activity for ${selectedUser ? selectedUser.name : ''}`,\n    },\n    // ... other Highcharts options\n  };\n\n  return (\n    <div>\n      <label>Select User:</label>\n      <Select\n        options={users.map((user) => ({ value: user.id, label: user.name }))}\n        onChange={handleUserChange}\n        value={selectedUser ? { value: selectedUser.id, label: selectedUser.name } : null}\n      />\n      {selectedUser && (\n        <div>\n          <h2>Selected User</h2>\n          <p>Name: {selectedUser.name}</p>\n          <p>Email: {selectedUser.email}</p>\n          {/* Add more user details as needed */}\n        </div>\n      )}\n      <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n    </div>\n  );\n};\n\nexport default UserDropdownHighcharts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}