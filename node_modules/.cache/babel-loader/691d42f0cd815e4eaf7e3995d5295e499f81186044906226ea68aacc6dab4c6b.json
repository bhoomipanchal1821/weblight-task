{"ast":null,"code":"// DynamicHighchart.js\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n// import fetchChartData from'../redux/chartdataSlice'\n// import { setChartData } from '../redux/chartdataSlice';\n\n// const DynamicHighchart = () => {\n//     // Sample chart data structure\n// const chartData = [\n//     { category: 'Week<br/>Changes<br/>,Contributer', value1: 10, value2: 20 },\n//     { category: 'Week<br/>Changes<br/>,Contributer', value1: 20, value2: 30 },\n//     { category: 'Week<br/>Changes<br/>,Contributer', value1: 50, value2: 75 },\n//     // ... more data\n//   ];\n\n//   const dispatch = useDispatch();\n//   const selectedOption = useSelector((state) => state.dropdown.selectedOption);\n\n//   useEffect(() => {\n//     if (selectedOption) {\n//       fetchChartData(selectedOption.value)\n//         .then((data) => {\n//           dispatch(setChartData(data)); // Dispatch the actual action to update chart data\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching chart data:', error);\n//         });\n//     }\n//   }, [dispatch, selectedOption]);\n\n//   const chartOptions = {\n//     chart: {\n//       type: 'line', // Specify the chart type (line, column, bar, etc.)\n//     },\n//     title: {\n//       text: `Dynamic Highchart for ${selectedOption?.label || 'No Option Selected'}`,\n//     },\n//     xAxis: {\n//       categories: chartData.map((item) => item.category), // Replace with your actual data property\n//       title: {\n//         text: 'X-Axis Label',\n//       },\n//     },\n//     yAxis: {\n//       title: {\n//         text: 'Y-Axis Label',\n//       },\n//     },\n//     series: [\n//       {\n//         name: 'Series 1',\n//         data: chartData.map((item) => item.value1), // Replace with your actual data property\n//       },\n//       {\n//         name: 'Series 2',\n//         data: chartData.map((item) => item.value2), // Replace with your actual data property\n//       },\n//     ],\n//     // Add more configuration options as needed\n//   };\n\n//   return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n// };\n\n// export default DynamicHighchart;\n\n// A point click event that uses the Renderer to draw a label next to the point\n// On subsequent clicks, move the existing label instead of creating a new one.\nHighcharts.addEvent(Highcharts.Point, 'click', function () {\n  if (this.series.options.className.indexOf('popup-on-click') !== -1) {\n    const chart = this.series.chart;\n    const date = Highcharts.dateFormat('%A, %b %e, %Y', this.x);\n    const text = `<b>${date}</b><br/>${this.y} ${this.series.name}`;\n    const anchorX = this.plotX + this.series.xAxis.pos;\n    const anchorY = this.plotY + this.series.yAxis.pos;\n    const align = anchorX < chart.chartWidth - 200 ? 'left' : 'right';\n    const x = align === 'left' ? anchorX + 10 : anchorX - 10;\n    const y = anchorY - 30;\n    if (!chart.sticky) {\n      chart.sticky = chart.renderer.label(text, x, y, 'callout', anchorX, anchorY).attr({\n        align,\n        fill: 'rgba(0, 0, 0, 0.75)',\n        padding: 10,\n        zIndex: 7 // Above series, below tooltip\n      }).css({\n        color: 'white'\n      }).on('click', function () {\n        chart.sticky = chart.sticky.destroy();\n      }).add();\n    } else {\n      chart.sticky.attr({\n        align,\n        text\n      }).animate({\n        anchorX,\n        anchorY,\n        x,\n        y\n      }, {\n        duration: 250\n      });\n    }\n  }\n});\nHighcharts.chart('container', {\n  chart: {\n    scrollablePlotArea: {\n      minWidth: 700\n    }\n  },\n  data: {\n    csvURL: 'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/analytics.csv',\n    beforeParse: function (csv) {\n      return csv.replace(/\\n\\n/g, '\\n');\n    }\n  },\n  title: {\n    text: 'Daily sessions at www.highcharts.com',\n    align: 'left'\n  },\n  subtitle: {\n    text: 'Source: Google Analytics',\n    align: 'left'\n  },\n  xAxis: {\n    tickInterval: 7 * 24 * 3600 * 1000,\n    // one week\n    tickWidth: 0,\n    gridLineWidth: 1,\n    labels: {\n      align: 'left',\n      x: 3,\n      y: -3\n    }\n  },\n  yAxis: [{\n    // left y axis\n    title: {\n      text: null\n    },\n    labels: {\n      align: 'left',\n      x: 3,\n      y: 16,\n      format: '{value:.,0f}'\n    },\n    showFirstLabel: false\n  }, {\n    // right y axis\n    linkedTo: 0,\n    gridLineWidth: 0,\n    opposite: true,\n    title: {\n      text: null\n    },\n    labels: {\n      align: 'right',\n      x: -3,\n      y: 16,\n      format: '{value:.,0f}'\n    },\n    showFirstLabel: false\n  }],\n  legend: {\n    align: 'left',\n    verticalAlign: 'top',\n    borderWidth: 0\n  },\n  tooltip: {\n    shared: true,\n    crosshairs: true\n  },\n  plotOptions: {\n    series: {\n      cursor: 'pointer',\n      className: 'popup-on-click',\n      marker: {\n        lineWidth: 1\n      }\n    }\n  },\n  series: [{\n    name: 'All sessions',\n    lineWidth: 4,\n    marker: {\n      radius: 4\n    }\n  }, {\n    name: 'New users'\n  }]\n});","map":{"version":3,"names":["Highcharts","addEvent","Point","series","options","className","indexOf","chart","date","dateFormat","x","text","y","name","anchorX","plotX","xAxis","pos","anchorY","plotY","yAxis","align","chartWidth","sticky","renderer","label","attr","fill","padding","zIndex","css","color","on","destroy","add","animate","duration","scrollablePlotArea","minWidth","data","csvURL","beforeParse","csv","replace","title","subtitle","tickInterval","tickWidth","gridLineWidth","labels","format","showFirstLabel","linkedTo","opposite","legend","verticalAlign","borderWidth","tooltip","shared","crosshairs","plotOptions","cursor","marker","lineWidth","radius"],"sources":["/var/www/html/REACT/weblight-task/src/components/DropDownChart.js"],"sourcesContent":["\n// DynamicHighchart.js\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Highcharts from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n// import fetchChartData from'../redux/chartdataSlice'\n// import { setChartData } from '../redux/chartdataSlice';\n\n// const DynamicHighchart = () => {\n//     // Sample chart data structure\n// const chartData = [\n//     { category: 'Week<br/>Changes<br/>,Contributer', value1: 10, value2: 20 },\n//     { category: 'Week<br/>Changes<br/>,Contributer', value1: 20, value2: 30 },\n//     { category: 'Week<br/>Changes<br/>,Contributer', value1: 50, value2: 75 },\n//     // ... more data\n//   ];\n  \n//   const dispatch = useDispatch();\n//   const selectedOption = useSelector((state) => state.dropdown.selectedOption);\n \n\n//   useEffect(() => {\n//     if (selectedOption) {\n//       fetchChartData(selectedOption.value)\n//         .then((data) => {\n//           dispatch(setChartData(data)); // Dispatch the actual action to update chart data\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching chart data:', error);\n//         });\n//     }\n//   }, [dispatch, selectedOption]);\n\n//   const chartOptions = {\n//     chart: {\n//       type: 'line', // Specify the chart type (line, column, bar, etc.)\n//     },\n//     title: {\n//       text: `Dynamic Highchart for ${selectedOption?.label || 'No Option Selected'}`,\n//     },\n//     xAxis: {\n//       categories: chartData.map((item) => item.category), // Replace with your actual data property\n//       title: {\n//         text: 'X-Axis Label',\n//       },\n//     },\n//     yAxis: {\n//       title: {\n//         text: 'Y-Axis Label',\n//       },\n//     },\n//     series: [\n//       {\n//         name: 'Series 1',\n//         data: chartData.map((item) => item.value1), // Replace with your actual data property\n//       },\n//       {\n//         name: 'Series 2',\n//         data: chartData.map((item) => item.value2), // Replace with your actual data property\n//       },\n//     ],\n//     // Add more configuration options as needed\n//   };\n\n//   return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n// };\n\n// export default DynamicHighchart;\n\n\n// A point click event that uses the Renderer to draw a label next to the point\n// On subsequent clicks, move the existing label instead of creating a new one.\nHighcharts.addEvent(Highcharts.Point, 'click', function () {\n    if (this.series.options.className.indexOf('popup-on-click') !== -1) {\n        const chart = this.series.chart;\n        const date = Highcharts.dateFormat('%A, %b %e, %Y', this.x);\n        const text = `<b>${date}</b><br/>${this.y} ${this.series.name}`;\n\n        const anchorX = this.plotX + this.series.xAxis.pos;\n        const anchorY = this.plotY + this.series.yAxis.pos;\n        const align = anchorX < chart.chartWidth - 200 ? 'left' : 'right';\n        const x = align === 'left' ? anchorX + 10 : anchorX - 10;\n        const y = anchorY - 30;\n        if (!chart.sticky) {\n            chart.sticky = chart.renderer\n                .label(text, x, y, 'callout',  anchorX, anchorY)\n                .attr({\n                    align,\n                    fill: 'rgba(0, 0, 0, 0.75)',\n                    padding: 10,\n                    zIndex: 7 // Above series, below tooltip\n                })\n                .css({\n                    color: 'white'\n                })\n                .on('click', function () {\n                    chart.sticky = chart.sticky.destroy();\n                })\n                .add();\n        } else {\n            chart.sticky\n                .attr({ align, text })\n                .animate({ anchorX, anchorY, x, y }, { duration: 250 });\n        }\n    }\n});\n\n\nHighcharts.chart('container', {\n\n    chart: {\n        scrollablePlotArea: {\n            minWidth: 700\n        }\n    },\n\n    data: {\n        csvURL: 'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/analytics.csv',\n        beforeParse: function (csv) {\n            return csv.replace(/\\n\\n/g, '\\n');\n        }\n    },\n\n    title: {\n        text: 'Daily sessions at www.highcharts.com',\n        align: 'left'\n    },\n\n    subtitle: {\n        text: 'Source: Google Analytics',\n        align: 'left'\n    },\n\n    xAxis: {\n        tickInterval: 7 * 24 * 3600 * 1000, // one week\n        tickWidth: 0,\n        gridLineWidth: 1,\n        labels: {\n            align: 'left',\n            x: 3,\n            y: -3\n        }\n    },\n\n    yAxis: [{ // left y axis\n        title: {\n            text: null\n        },\n        labels: {\n            align: 'left',\n            x: 3,\n            y: 16,\n            format: '{value:.,0f}'\n        },\n        showFirstLabel: false\n    }, { // right y axis\n        linkedTo: 0,\n        gridLineWidth: 0,\n        opposite: true,\n        title: {\n            text: null\n        },\n        labels: {\n            align: 'right',\n            x: -3,\n            y: 16,\n            format: '{value:.,0f}'\n        },\n        showFirstLabel: false\n    }],\n\n    legend: {\n        align: 'left',\n        verticalAlign: 'top',\n        borderWidth: 0\n    },\n\n    tooltip: {\n        shared: true,\n        crosshairs: true\n    },\n\n    plotOptions: {\n        series: {\n            cursor: 'pointer',\n            className: 'popup-on-click',\n            marker: {\n                lineWidth: 1\n            }\n        }\n    },\n\n    series: [{\n        name: 'All sessions',\n        lineWidth: 4,\n        marker: {\n            radius: 4\n        }\n    }, {\n        name: 'New users'\n    }]\n});\n"],"mappings":"AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACAA,UAAU,CAACC,QAAQ,CAACD,UAAU,CAACE,KAAK,EAAE,OAAO,EAAE,YAAY;EACvD,IAAI,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE;IAChE,MAAMC,KAAK,GAAG,IAAI,CAACJ,MAAM,CAACI,KAAK;IAC/B,MAAMC,IAAI,GAAGR,UAAU,CAACS,UAAU,CAAC,eAAe,EAAE,IAAI,CAACC,CAAC,CAAC;IAC3D,MAAMC,IAAI,GAAI,MAAKH,IAAK,YAAW,IAAI,CAACI,CAAE,IAAG,IAAI,CAACT,MAAM,CAACU,IAAK,EAAC;IAE/D,MAAMC,OAAO,GAAG,IAAI,CAACC,KAAK,GAAG,IAAI,CAACZ,MAAM,CAACa,KAAK,CAACC,GAAG;IAClD,MAAMC,OAAO,GAAG,IAAI,CAACC,KAAK,GAAG,IAAI,CAAChB,MAAM,CAACiB,KAAK,CAACH,GAAG;IAClD,MAAMI,KAAK,GAAGP,OAAO,GAAGP,KAAK,CAACe,UAAU,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO;IACjE,MAAMZ,CAAC,GAAGW,KAAK,KAAK,MAAM,GAAGP,OAAO,GAAG,EAAE,GAAGA,OAAO,GAAG,EAAE;IACxD,MAAMF,CAAC,GAAGM,OAAO,GAAG,EAAE;IACtB,IAAI,CAACX,KAAK,CAACgB,MAAM,EAAE;MACfhB,KAAK,CAACgB,MAAM,GAAGhB,KAAK,CAACiB,QAAQ,CACxBC,KAAK,CAACd,IAAI,EAAED,CAAC,EAAEE,CAAC,EAAE,SAAS,EAAGE,OAAO,EAAEI,OAAO,CAAC,CAC/CQ,IAAI,CAAC;QACFL,KAAK;QACLM,IAAI,EAAE,qBAAqB;QAC3BC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,CAAC,CAAC;MACd,CAAC,CAAC,CACDC,GAAG,CAAC;QACDC,KAAK,EAAE;MACX,CAAC,CAAC,CACDC,EAAE,CAAC,OAAO,EAAE,YAAY;QACrBzB,KAAK,CAACgB,MAAM,GAAGhB,KAAK,CAACgB,MAAM,CAACU,OAAO,CAAC,CAAC;MACzC,CAAC,CAAC,CACDC,GAAG,CAAC,CAAC;IACd,CAAC,MAAM;MACH3B,KAAK,CAACgB,MAAM,CACPG,IAAI,CAAC;QAAEL,KAAK;QAAEV;MAAK,CAAC,CAAC,CACrBwB,OAAO,CAAC;QAAErB,OAAO;QAAEI,OAAO;QAAER,CAAC;QAAEE;MAAE,CAAC,EAAE;QAAEwB,QAAQ,EAAE;MAAI,CAAC,CAAC;IAC/D;EACJ;AACJ,CAAC,CAAC;AAGFpC,UAAU,CAACO,KAAK,CAAC,WAAW,EAAE;EAE1BA,KAAK,EAAE;IACH8B,kBAAkB,EAAE;MAChBC,QAAQ,EAAE;IACd;EACJ,CAAC;EAEDC,IAAI,EAAE;IACFC,MAAM,EAAE,qFAAqF;IAC7FC,WAAW,EAAE,SAAAA,CAAUC,GAAG,EAAE;MACxB,OAAOA,GAAG,CAACC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IACrC;EACJ,CAAC;EAEDC,KAAK,EAAE;IACHjC,IAAI,EAAE,sCAAsC;IAC5CU,KAAK,EAAE;EACX,CAAC;EAEDwB,QAAQ,EAAE;IACNlC,IAAI,EAAE,0BAA0B;IAChCU,KAAK,EAAE;EACX,CAAC;EAEDL,KAAK,EAAE;IACH8B,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;IAAE;IACpCC,SAAS,EAAE,CAAC;IACZC,aAAa,EAAE,CAAC;IAChBC,MAAM,EAAE;MACJ5B,KAAK,EAAE,MAAM;MACbX,CAAC,EAAE,CAAC;MACJE,CAAC,EAAE,CAAC;IACR;EACJ,CAAC;EAEDQ,KAAK,EAAE,CAAC;IAAE;IACNwB,KAAK,EAAE;MACHjC,IAAI,EAAE;IACV,CAAC;IACDsC,MAAM,EAAE;MACJ5B,KAAK,EAAE,MAAM;MACbX,CAAC,EAAE,CAAC;MACJE,CAAC,EAAE,EAAE;MACLsC,MAAM,EAAE;IACZ,CAAC;IACDC,cAAc,EAAE;EACpB,CAAC,EAAE;IAAE;IACDC,QAAQ,EAAE,CAAC;IACXJ,aAAa,EAAE,CAAC;IAChBK,QAAQ,EAAE,IAAI;IACdT,KAAK,EAAE;MACHjC,IAAI,EAAE;IACV,CAAC;IACDsC,MAAM,EAAE;MACJ5B,KAAK,EAAE,OAAO;MACdX,CAAC,EAAE,CAAC,CAAC;MACLE,CAAC,EAAE,EAAE;MACLsC,MAAM,EAAE;IACZ,CAAC;IACDC,cAAc,EAAE;EACpB,CAAC,CAAC;EAEFG,MAAM,EAAE;IACJjC,KAAK,EAAE,MAAM;IACbkC,aAAa,EAAE,KAAK;IACpBC,WAAW,EAAE;EACjB,CAAC;EAEDC,OAAO,EAAE;IACLC,MAAM,EAAE,IAAI;IACZC,UAAU,EAAE;EAChB,CAAC;EAEDC,WAAW,EAAE;IACTzD,MAAM,EAAE;MACJ0D,MAAM,EAAE,SAAS;MACjBxD,SAAS,EAAE,gBAAgB;MAC3ByD,MAAM,EAAE;QACJC,SAAS,EAAE;MACf;IACJ;EACJ,CAAC;EAED5D,MAAM,EAAE,CAAC;IACLU,IAAI,EAAE,cAAc;IACpBkD,SAAS,EAAE,CAAC;IACZD,MAAM,EAAE;MACJE,MAAM,EAAE;IACZ;EACJ,CAAC,EAAE;IACCnD,IAAI,EAAE;EACV,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}